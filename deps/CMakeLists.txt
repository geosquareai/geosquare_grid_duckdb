cmake_minimum_required(VERSION 3.20)

project(dependecies-build)

# Install and build dependencies locally
include(ExternalProject)
set(LOCAL_INSTALL_DIR ${CMAKE_BINARY_DIR}/local)
set_directory_properties(PROPERTIES EP_BASE ${CMAKE_BINARY_DIR}/projects)

if(${CMAKE_VERSION} VERSION_GREATER_EQUAL "3.24.0")
    cmake_policy(SET CMP0135 NEW)
endif()

if (NOT EMSCRIPTEN)
  if (OSX_BUILD_ARCH)
    message(STATUS "building for OSX architecture: ${OSX_BUILD_ARCH}")
    if (NOT APPLE)
      error("This only makes sense on OSX")
    endif()
    set(CMAKE_OSX_ARCHITECTURES ${OSX_BUILD_ARCH})
    # Escape semicolons in CMAKE_OSX_ARCHITECTURES before passing to ExternalProject_Add
    string(REPLACE ";" "$<SEMICOLON>" CMAKE_OSX_ARCHITECTURES_PACKED "${CMAKE_OSX_ARCHITECTURES}")
  endif()
endif()

set(CMAKE_FLAGS_POINTER_SIZE )
set(CMAKE_PROJ_FLAGS )
set(OGR_ENABLE_DRIVER_OPENFILEGDB ON)
set(CMAKE_GDAL_FLAGS )
set(PATCH_NAME_ENDING )
if (EMSCRIPTEN)
  set(CMAKE_FLAGS_POINTER_SIZE -DCMAKE_SIZEOF_VOID_P=4 -DCMAKE_SIZEOF_VOIDP=4)
  set(CMAKE_PROJ_FLAGS -DCMAKE_MODULE_PATH=${LOCAL_INSTALL_DIR}/lib/cmake -DSQLITE3_INCLUDE_DIR=${LOCAL_INSTALL_DIR}/include -DSQLITE3_LIBRARY=${LOCAL_INSTALL_DIR}/lib/libsqlite3.a)
  set(CMAKE_GDAL_FLAGS -DACCEPT_MISSING_LINUX_FS_HEADER=ON -DSIZEOF_INT=4 -DSIZEOF_UNSIGNED_LONG=4 -DSIZEOF_OFF_T=4 -DGEOS_DIR=${LOCAL_INSTALL_DIR}/lib/cmake/geos -DGeographicLib_DIR=${LOCAL_INSTALL_DIR}/lib/cmake/GeographicLib -DSQLITE3_LIBRARY=${LOCAL_INSTALL_DIR}/lib/libsqlite3.a)
  set(PATCH_NAME_ENDING _wasm)
  set(OGR_ENABLE_DRIVER_OPENFILEGDB OFF)
endif()


# GEOS
ExternalProject_Add(
    GEOS
    URL ${CMAKE_CURRENT_SOURCE_DIR}/geos-3.12.2.tar.bz2
    CONFIGURE_HANDLED_BY_BUILD TRUE
    CMAKE_ARGS 
    # CMake options
    -DCMAKE_INSTALL_PREFIX:PATH=${LOCAL_INSTALL_DIR}
    -DCMAKE_PREFIX_PATH=${LOCAL_INSTALL_DIR}
    -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE}
    -DCMAKE_OSX_ARCHITECTURES=${CMAKE_OSX_ARCHITECTURES_PACKED}
    -DCMAKE_POSITION_INDEPENDENT_CODE=ON
    ${CMAKE_FLAGS_POINTER_SIZE}
    # vcpkg options
    -DVCPKG_MANIFEST_DIR='${VCPKG_MANIFEST_DIR}'
    -DVCPKG_INSTALLED_DIR='${VCPKG_INSTALLED_DIR}'
    -DCMAKE_TOOLCHAIN_FILE='${CMAKE_TOOLCHAIN_FILE}'
    -DVCPKG_TARGET_TRIPLET='${VCPKG_TARGET_TRIPLET}'
    # WebAssembly options (will be ignored in non-WASM builds)
    $<$<BOOL:${EMSCRIPTEN}>:-DCMAKE_CROSSCOMPILING=ON>
    $<$<BOOL:${EMSCRIPTEN}>:-DCMAKE_SYSTEM_NAME=Emscripten>
    # GEOS options
    $<$<BOOL:${EMSCRIPTEN}>:-DGEOS_ENABLE_CPP_API=OFF>
    $<$<BOOL:${EMSCRIPTEN}>:-DGEOS_ENABLE_JTS_TESTS=OFF>
    -DBUILD_SHARED_LIBS=OFF
    -DBUILD_TESTING=OFF
    -DBUILD_DOCUMENTATION=OFF
    -DBUILD_ASTYLE=OFF
    -DBUILD_GEOSOP=OFF
)